class DecodeThread
!!!187138.java!!!	DecodeThread(inout activity : QrCodeScanActivity, inout decodeFormats : Collection<BarcodeFormat>, inout baseHints : Map<DecodeHintType, ?>, in characterSet : String, inout resultPointCallback : ResultPointCallback)

        this.activity = activity;
        handlerInitLatch = new CountDownLatch(1);

        hints = new EnumMap<>(DecodeHintType.class);
        if (baseHints != null) {
            hints.putAll(baseHints);
        }

        // The prefs can't change while the thread is running, so pick them up once here.
        if (decodeFormats == null || decodeFormats.isEmpty()) {
            SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(activity);
            decodeFormats = EnumSet.noneOf(BarcodeFormat.class);
            if (true /*prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D_PRODUCT, true)*/) {
                decodeFormats.addAll(DecodeFormatManager.PRODUCT_FORMATS);
            }
            if (true /* prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D_INDUSTRIAL, true)*/) {
                decodeFormats.addAll(DecodeFormatManager.INDUSTRIAL_FORMATS);
            }
            if (true /*prefs.getBoolean(PreferencesActivity.KEY_DECODE_QR, true)*/) {
                decodeFormats.addAll(DecodeFormatManager.QR_CODE_FORMATS);
            }
            if (true /*prefs.getBoolean(PreferencesActivity.KEY_DECODE_DATA_MATRIX, true)*/) {
                decodeFormats.addAll(DecodeFormatManager.DATA_MATRIX_FORMATS);
            }
            if (true /*prefs.getBoolean(PreferencesActivity.KEY_DECODE_AZTEC, false)*/) {
                decodeFormats.addAll(DecodeFormatManager.AZTEC_FORMATS);
            }
            if (true /*prefs.getBoolean(PreferencesActivity.KEY_DECODE_PDF417, false)*/) {
                decodeFormats.addAll(DecodeFormatManager.PDF417_FORMATS);
            }
        }
        hints.put(DecodeHintType.POSSIBLE_FORMATS, decodeFormats);

        if (characterSet != null) {
            hints.put(DecodeHintType.CHARACTER_SET, characterSet);
        }
        hints.put(DecodeHintType.NEED_RESULT_POINT_CALLBACK, resultPointCallback);
        Log.i("DecodeThread", "Hints: " + hints);
!!!187266.java!!!	getHandler() : Handler
        try {
            handlerInitLatch.await();
        } catch (InterruptedException ie) {
            // continue?
        }
        return handler;
!!!187394.java!!!	run() : void
        Looper.prepare();
        handler = new DecodeHandler(activity, hints);
        handlerInitLatch.countDown();
        Looper.loop();
