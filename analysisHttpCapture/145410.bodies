class LDPingParse
!!!201474.java!!!	getFormattingStr(in host : String, in log : String) : String
    StringBuilder logRes = new StringBuilder();
    if (log.contains("timeout")) {
      logRes.append("ping: cannot resolve " + host + ": Timeout");
    } else if (log.contains("unknown")) {
      logRes.append("ping: cannot resolve " + host + ": Unknown host");
    } else {
      makePingResponse(log, logRes);
    }
    return logRes.toString();
!!!201602.java!!!	makePingResponse(in log : String, inout logRes : StringBuilder) : void
    String hostIp = getIP(log);
    List<String> bytesList = getSumBytes(log);
    List<String> ttlList = getTTL(log);
    List<String> timeList = getTime(log);
    List<String> icmpList = getIcmp_seq(log);
    int len = timeList.size();
    for (int i = 0; i < len - 1; i++) {
      logRes.append(bytesList.get(i) + "bytes from " + hostIp + ": icmp_seq=#"
          + icmpList.get(i) + " ttl=" + ttlList.get(i) + " time="
          + timeList.get(i) + "ms" + "\n");
    }
    logRes.append(bytesList.get(len - 1) + "bytes from " + hostIp
        + ": icmp_seq=#" + icmpList.get(len - 1) + " ttl="
        + ttlList.get(len - 1) + " time=" + timeList.get(len - 1) + "ms");
!!!201730.java!!!	getTime(in log : String) : List<String>
    List<String> timeList = new ArrayList<String>();
    String regex = "(?<==)([\\.0-9\\s]+)(?=ms)";
    Pattern p = Pattern.compile(regex);
    Matcher m = p.matcher(log);
    while (m.find()) {
      timeList.add(m.group().toString().trim());
    }
    return timeList;
!!!201858.java!!!	getSumBytes(in log : String) : List<String>
    List<String> bytesList = new ArrayList<String>();
    String regex = "(?<=\\D)([\\s0-9]+)(?=bytes)";
    Pattern p = Pattern.compile(regex);
    Matcher m = p.matcher(log);
    while (m.find()) {
      String string = m.group().toString().trim();
      if (m.group().toString().trim().matches("\\d+")) {
        bytesList.add(string);
      }
    }
    return bytesList;
!!!201986.java!!!	getTTL(in log : String) : List<String>
    List<String> ttlList = new ArrayList<String>();
    String regex = "(?<=ttl=)([0-9]+)(?=\\s)";
    Pattern p = Pattern.compile(regex);
    Matcher m = p.matcher(log);
    while (m.find()) {
      String tmp = m.group().toString().trim();
      ttlList.add(tmp);
    }
    return ttlList;
!!!202114.java!!!	getIP(in log : String) : String
    String hostIp = null;
    String regex = "(?<=\\()([\\d]+\\.)+[\\d]+(?=\\))";
    Pattern p = Pattern.compile(regex);
    Matcher m = p.matcher(log);
    while (m.find()) {
      hostIp = m.group().toString().trim();
    }
    return hostIp;
!!!202242.java!!!	getIcmp_seq(in log : String) : List<String>
    List<String> icmpList = new ArrayList<String>();
    String regex = "(?<=icmp_seq=)([0-9]+)(?=\\s)";
    Pattern p = Pattern.compile(regex);
    Matcher m = p.matcher(log);
    while (m.find()) {
      String tmp = m.group().toString().trim();
      icmpList.add(tmp);
    }
    return icmpList;
